# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  # Add your Azure Static Web App deployment token as a pipeline variable
  # You'll need to set this in Azure DevOps Pipeline Library
  azureStaticWebAppsToken: '$(AZURE_STATIC_WEB_APPS_API_TOKEN)'

stages:
- stage: Build
  displayName: 'Build and Deploy'
  jobs:
  - job: BuildAndDeploy
    displayName: 'Build and Deploy Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    
    - script: |
        npm install
      displayName: 'Install dependencies'
    
    - script: |
        npm run build
      displayName: 'Build application'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/build'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive build files'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish build artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure Static Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Your-Azure-Subscription-Connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Extract the zip file
                unzip $(Pipeline.Workspace)/drop/*.zip -d $(Pipeline.Workspace)/extracted
                
                # Deploy to Azure Static Web App using Azure CLI
                az staticwebapp deploy \
                  --source $(Pipeline.Workspace)/extracted \
                  --deployment-token $(azureStaticWebAppsToken) \
                  --name your-static-web-app-name \
                  --resource-group your-resource-group-name
            displayName: 'Deploy to Azure Static Web App'